<template>
  <view id="heart-state-viewer" class="canvas-page-wrapper">
    <button class="switch-chart">切换至{{ currentChart === 'heart-rate' ? '血压' : '心率' }}报告</button>
    <canvas canvas-id="heart-state-chart" style="width: {{ canvasWidth }}px; height: {{ canvasHeight }}px"></canvas>
    <scroll-view class="md-list" scroll-y>
      <view class="section">
        <text class="title">日期选择</text>
        <daterangepicker :value.sync="dateRange"></daterangepicker>
      </view>
      <view class="section">
        <text class="title">摘要</text>
      </view>
      <view class="section">
        <text class="title">详细信息</text>
      </view>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Chart from '../lib/chart'
  import mdlistitem from '../components/md-list-item'
  import { formatDate } from '../lib/util'
  import daterangepicker from '../components/date-range-picker'

  export default class HeartStateViewer extends wepy.component {
    components = {
      mdlistitem,
      daterangepicker
    }

    data = {
      canvasWidth: 0,
      canvasHeight: 0,
      currentChart: 'blood-presure',
      dateRange: {
        from: formatDate(new Date() - 7 * 24 * 60 * 60 * 1000),
        to: formatDate()
      }
    }

    onLoad () {
      const ctx = wx.createCanvasContext('heart-state-chart')
      this.heartRateChart = new Chart(ctx, [], d => d.date, d => d.heartRate)
      this.systolicChart = new Chart(ctx, [], d => d.date, d => d.systolic)
      this.diastolicChart = new Chart(ctx, [], d => d.date, d => d.diastolic)

      this.canvasWidth = this.chart.rect.width
      this.canvasHeight = this.chart.rect.height
    }
  }
</script>

<style lang="scss">
  @import '../assets/styles/variables';

  #heart-state-viewer {
    padding-top: 0;

    .switch-chart {
      @include button-reset;
      padding: 12px 0;
      color: $primary;

      &.button-hover {
        background-color: $dark-white;
      }
    }
  }
</style>
