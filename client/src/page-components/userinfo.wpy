<template>
  <view id="userinfo">
    <view class="title-shadow"></view>
    <view class="header">
      <image class="avatar" src="{{ userinfo.avatarUrl }}"></image>
      <view class="user-detail">
        <view class="name">{{ userinfo.nickName }}</view>
        <view>
          <text>{{ gender }}</text>
          <text class="age">{{ age }}岁</text>
        </view>
      </view>
      <button class="settings">
        <image src="../assets/icons/settings.svg"></image>
      </button>
    </view>
    <scroll-view class="md-list" scroll-y>
      <view class="section">
        <text class="title">个人信息</text>
        <mdiconitem>
          <image slot="icon" src="../assets/icons/cake-layered.svg"></image>
          <text slot="caption">生日</text>
          <text slot="left">{{ userinfo.birthday }}</text>
        </mdiconitem>
        <mdiconitem>
          <image slot="icon" src="../assets/icons/human-male.svg"></image>
          <text slot="caption">身高</text>
          <text slot="left">{{ userinfo.height }}cm</text>
        </mdiconitem>
      </view>
      <view class="section">
        <text class="title">疾病史</text>
        <repeat for="{{ userinfo.diseases }}" key="{{ index }}">
          <mdlistitem>
            <text slot="caption">{{ item.name }}</text>
            <view slot="left">
              <view>确诊日期: {{ item.onset }}</view>
              <view>{{ item.detail }}</view>
            </view>
          </mdlistitem>
        </repeat>
      </view>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { GENDER } from '../lib/constants'
  import mdiconitem from '../components/md-icon-item'
  import mdlistitem from '../components/md-list-item'

  export default class Userinfo extends wepy.component {
    components = {
      mdiconitem,
      mdlistitem
    }

    data = {
      userinfo: {}
    }

    computed = {
      age () {
        let birthday = this.userinfo.birthday
        if (birthday) {
          const now = new Date()
          birthday = new Date(birthday)

          const age = now.getFullYear() - birthday.getFullYear()
          if (now.getMonth() < birthday.getMonth() || (now.getMonth() === birthday.getMonth() && now.getDate() < birthday.getDate())) {
            return age - 1
          } else return age
        } else return 0
      },
      gender () {
        return GENDER[this.userinfo.gender]
      }
    }

    refresh () {
      this.userinfo = this.$state.userinfo
      this.$apply()
    }
  }
</script>

<style lang="scss">
  @import '../assets/styles/variables';

  #userinfo {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;

    .header {
      display: flex;
      align-items: center;
      padding: 16px;

      .avatar {
        width: 64px;
        height: 64px;
        margin-right: 16px;
        border-radius: 50%;
      }

      .name {
        margin-bottom: 4px;
        font-size: 1.25em;
        font-weight: bold;
      }

      .age {
        margin-left: 16px;
      }

      .settings {
        @include button-reset;
        margin-left: auto;
        padding: 8px;

        image {
          width: $icon-size;
          height: $icon-size;
        }

        &.button-hover {
          background-color: $dark-white;
        }
      }
    }

    .md-list {
      margin-top: 0;
    }
  }
</style>
